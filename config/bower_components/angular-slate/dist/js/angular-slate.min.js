"use strict";angular.module("angular-slate",[]),angular.module("angular-slate").directive("colorPicker",function(){var e=[{name:"Black",hex:"#000000",pebble:0},{name:"White",hex:"#FFFFFF",pebble:1},{name:"Grey",hex:"#BBBBBB",pebble:2}],l=[null,null,{name:"Bright Green",hex:"#55FF00",pebble:5635840},{name:"Inchworm",hex:"#AAFF55",pebble:11206485},null,{name:"Icterine",hex:"#FFFF55",pebble:16777045},{name:"Pastel Yellow",hex:"#FFFFAA",pebble:16777130},null,null,null,{name:"Mint Green",hex:"#AAFFAA",pebble:11206570},{name:"Screamin' Green",hex:"#55FF55",pebble:5635925},{name:"Green",hex:"#00FF00",pebble:65280},{name:"Spring Bud",hex:"#AAFF00",pebble:11206400},{name:"Yellow",hex:"#FFFF00",pebble:16776960},{name:"Rajah",hex:"#FFAA55",pebble:16755285},{name:"Melon",hex:"#FFAAAA",pebble:16755370},null,{name:"Medium Aquamarine",hex:"#55FFAA",pebble:5636010},{name:"Malachite",hex:"#00FF55",pebble:65365},{name:"Islamic Green",hex:"#00AA00",pebble:43520},{name:"Kelly Green",hex:"#55AA00",pebble:5614080},{name:"Brass",hex:"#AAAA55",pebble:11184725},{name:"Limerick",hex:"#AAAA00",pebble:11184640},{name:"Chrome Yellow",hex:"#FFAA00",pebble:16755200},{name:"Orange",hex:"#FF5500",pebble:16733440},{name:"Sunset Orange",hex:"#FF5555",pebble:16733525},{name:"Celeste",hex:"#AAFFFF",pebble:11206655},{name:"Medium Spring Green",hex:"#00FFAA",pebble:65450},{name:"Jaeger Green",hex:"#00AA55",pebble:43605},{name:"May Green",hex:"#55AA55",pebble:5614165},{name:"Dark Green (X11)",hex:"#005500",pebble:21760},{name:"Army Green",hex:"#555500",pebble:5592320},{name:"Windsor Tan",hex:"#AA5500",pebble:11162880},{name:"Red",hex:"#FF0000",pebble:16711680},{name:"Folly",hex:"#FF0055",pebble:16711765},null,{name:"Cadet Blue",hex:"#55AAAA",pebble:5614250},{name:"Tiffany Blue",hex:"#00AAAA",pebble:43690},{name:"Midnight Green (Eagle Green)",hex:"#005555",pebble:21845},{name:"White",hex:"#FFFFFF",pebble:16777215},{name:"Black",hex:"#000000",pebble:0},{name:"Rose Vale",hex:"#AA5555",pebble:11162965},{name:"Dark Candy Apple Red",hex:"#AA0000",pebble:11141120},null,{name:"Electric Blue",hex:"#55FFFF",pebble:5636095},{name:"Cyan",hex:"#00FFFF",pebble:65535},{name:"Vivid Cerulean",hex:"#00AAFF",pebble:43775},{name:"Cobalt Blue",hex:"#0055AA",pebble:21930},{name:"Light Gray",hex:"#AAAAAA",pebble:11184810},{name:"Dark Gray",hex:"#555555",pebble:5592405},{name:"Bulgarian Rose",hex:"#550000",pebble:5570560},{name:"Jazzberry Jam",hex:"#AA0055",pebble:11141205},{name:"Brilliant Rose",hex:"#FF55AA",pebble:16733610},{name:"Picton Blue",hex:"#55AAFF",pebble:5614335},{name:"Blue Moon",hex:"#0055FF",pebble:22015},{name:"Blue",hex:"#0000FF",pebble:255},{name:"Duke Blue",hex:"#0000AA",pebble:170},{name:"Oxford Blue",hex:"#000055",pebble:85},{name:"Imperial Purple",hex:"#550055",pebble:5570645},{name:"Purple",hex:"#AA00AA",pebble:11141290},{name:"Fashion Magenta",hex:"#FF00AA",pebble:16711850},{name:"Rich Brilliant Lavender",hex:"#FFAAFF",pebble:16755455},null,{name:"Liberty",hex:"#5555AA",pebble:5592490},{name:"Very Light Blue",hex:"#5555FF",pebble:5592575},{name:"Electric Ultramarine",hex:"#5500FF",pebble:5570815},{name:"Indigo (Web)",hex:"#5500AA",pebble:5570730},{name:"Vivid Violet",hex:"#AA00FF",pebble:11141375},{name:"Magenta",hex:"#FF00FF",pebble:16711935},{name:"Shocking Pink (Crayola)",hex:"#FF55FF",pebble:16733695},null,null,null,null,{name:"Baby Blue Eyes",hex:"#AAAAFF",pebble:11184895},{name:"Lavender Indigo",hex:"#AA55FF",pebble:11163135},{name:"Purpureus",hex:"#AA55AA",pebble:11163050},null,null,null];return{restrict:"E",scope:{},replace:!0,require:"ngModel",template:'<span class="angular-slate"><span ng-if="platform == \'aplite\'"><span class="color" ng-style="style(model)"></span><select class="item-select" ng-model="model" ng-options="c.name for c in colors" ng-change="setModel(model)"></select><div class="select-triangle"></div></span><span ng-if="platform != \'aplite\'"><span class="color-name" ng-bind="model.name"></span><div class="item-styled-color"><span class="value clickable" ng-style="style(model)" ng-click="toggle()"></span><div style="padding-bottom:100%" class="color-box-wrap show" ng-if="show"><div class="color-box-container"><i ng-repeat="c in colors track by $index" ng-click="setModel(c)" class="color-box" ng-class="{selectable: !!c, transparent: !c, \'clear-left\': $index % 9 == 0}" ng-style="style(c)"></i></div></div></div><span></span>',link:function(n,a,t,i){n.show=!1,n.platform=t.platform,"aplite"==n.platform?n.colors=e:n.colors=l,i.$formatters.push(function(e){var l=null;return 1==e&&"aplite"!=n.platform&&(e=16777215),angular.forEach(n.colors,function(n){n&&n.pebble==e&&(l=n)}),l}),i.$render=function(){n.model=i.$viewValue},i.$parsers.push(function(e){return e?e.pebble:null}),n.$watch("model",function(){i.$setViewValue(n.model)},!0),n.toggle=function(){n.show=!n.show},n.setModel=function(e){n.model=e,n.show=!1},n.style=function(e){var l={};return e&&(l={"background-color":e.hex},"aplite"==n.platform&&("White"==e.name?l.border="black solid 1px":l.border=e.hex+" solid 1px")),l}}}}),angular.module("angular-slate").directive("draggable",["$timeout",function(e){return{restrict:"E",scope:{model:"=ngModel",label:"@label"},replace:!0,template:'<div class="item-container-content angular-slate"><div class="item-draggable-list"><label class="item item-{{$index}}" ng-repeat="item in model" ng-bind="item[label]"></label></ul></div>',link:function(l,n){e(function(){$(n.children()[0]).itemDraggableList();var a=new MutationObserver(function(){var a=[],t=$(n.children()[0]).children();t.each(function(e){var l=$(t[e]).attr("class").split(" ");for(var n in l){var i=l[n];if("item-"==i.substring(0,5)){a.push(parseInt(i.substring(5)));break}}}),e(function(){var e=[];for(var n in a)e.push(l.model[a[n]]);l.model=e})});a.observe(n[0],{childList:!0,subtree:!0})})}}}]),angular.module("angular-slate").directive("kiezelpay",["$http",function(e){var l="Thank you for purchasing this app!",n="You have not yet purchased a license",a="You are currently running the trial app ({{hours}} hours left)";return{restrict:"E",scope:{appid:"@appid",token:"=token",testing:"@testing",licensed_message:"@licensedMessage",unlicensed_message:"@unlicensedMessage",trial_message:"@trialMessage"},replace:!0,template:"<div ng-class=\"{licensed: status == 'licensed', unlicensed: status == 'unlicensed', trial: status == 'trial'}\">{{message}}</div>",link:function(t){function i(){if("licensed"==t.status)t.message=t.licensed_message?t.licensed_message:l;else if("trial"==t.status){var e=t.trial_message?t.trial_message:a;t.message=e.replace("{{hours}}",t.trial_hours)}else t.message=t.unlicensed_message?t.unlicensed_message:n}t.status="unlicensed",t.trial_hours=1,i(),t.$watch("token",function(){if(t.token){t.status="unlicensed",i();var l="https://kiezelpay.com/api/v1/status?appid="+t.appid+"&accounttoken="+t.token;"true"==t.testing&&(l+="&flags=3"),e.get(l).then(function(e){if(t.status=e.data.status,"trial"==t.status&&e.data.trialDurationInSeconds){var l=Math.ceil(e.data.trialDurationInSeconds/3600);t.trial_hours=l?l:1}else t.trial_hours=1;i()},function(e){console.error("An error occured fetching kiezelpay info",e)})}})}}}]),angular.module("angular-slate").directive("list",function(){return{restrict:"E",scope:{model:"=ngModel"},replace:!0,template:'<div class="item-container-content angular-slate"><div class="item-dyn-list"><label class="item" ng-repeat="item in model">{{item}}<div class="delete-item" ng-click="model.splice($index, 1)"></div></label><div class="item" ng-show="adding"><div class="item-input-wrapper"><input class="item-input" type="text" name="focus-box" ng-model="text" ng-keydown="keypress($event)" /></div></div><div class="item add-item" ng-click="adding = true">Add one more...</div></div></div>',link:function(e){e.adding=!1,e.text="",e.keypress=function(l){13==l.keyCode&&(e.model.push(e.text),e.text="",e.adding=!1)}}}});
//# sourceMappingURL=data:application/json;base64,
